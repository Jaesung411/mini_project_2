AWSTemplateFormatVersion: '2010-09-09'

Resources:
  MyVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: '10.0.0.0/16'
      Tags:
        - Key: 'Name'
          Value: 'MyWebAppVPC'

  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: '10.0.1.0/24'
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: 'Name'
          Value: 'MyWebAppPublicSubnet1'

  PublicSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: '10.0.2.0/24'
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: 'Name'
          Value: 'MyWebAppPublicSubnet2'
  
  PrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: '10.0.3.0/24' # 프라이빗 서브넷의 IP 범위
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: false # 퍼블릭 IP를 자동 할당하지 않음
      Tags:
        - Key: 'Name'
          Value: 'MyWebAppPrivateSubnet1'

  PrivateSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: '10.0.4.0/24' # 프라이빗 서브넷의 IP 범위
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: false # 퍼블릭 IP를 자동 할당하지 않음
      Tags:
        - Key: 'Name'
          Value: 'MyWebAppPrivateSubnet2'

  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: 'Name'
          Value: 'MyWebAppInternetGateway'

  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref InternetGateway

  RouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: 'Name'
          Value: 'MyWebAppRouteTable'

  PublicRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref RouteTable

  PublicSubnet2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref RouteTable

Outputs:
  VPCId:
    Value: !Ref MyVPC
    Export:
      Name: MyVPCId

  PublicSubnet1Id:
    Value: !Ref PublicSubnet1
    Export:
      Name: MyPublicSubnet1Id

  PublicSubnet2Id:
    Value: !Ref PublicSubnet2
    Export:
      Name: MyPublicSubnet2Id

  PrivateSubnet1Id:
    Value: !Ref PrivateSubnet1
    Export:
      Name: MyPrivateSubnet1Id

  PrivateSubnet2Id:
    Value: !Ref PrivateSubnet2
    Export:
      Name: MyPrivateSubnet2Id